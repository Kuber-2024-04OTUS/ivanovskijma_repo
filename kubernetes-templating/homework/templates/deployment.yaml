---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels" $ | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-nginx
    spec:
      containers:
      - name: {{ .Release.Name }}-nginx
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "rm -f /init/index.html"]
        volumeMounts:
        - name: {{ .Release.Name }}-nginx-volume
          mountPath: /homework
        - name: {{ .Release.Name }}-nginx-conf-volume
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        readinessProbe:
          initialDelaySeconds: {{ .Values.initialDelaySeconds }}
          exec:
            command:
            - cat
            - /homework/index.html
      initContainers:
      - name: {{ .Release.Name }}-init
        image: {{ .Values.imageInit.repository }}:{{ .Values.imageInit.tag }}
        command: ['/bin/sh', '-c', 'echo \<h1\>Hello World\</h1\> > /init/index.html']
        volumeMounts:
        - name: {{ .Release.Name }}-nginx-volume
          mountPath: /init
      volumes:
      - name: {{ .Release.Name }}-nginx-volume
        emptyDir: {}
      - name: {{ .Release.Name }}-nginx-conf-volume
        configMap:
          name: {{ .Release.Name }}-nginx-conf
     
